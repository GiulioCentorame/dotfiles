# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 10
# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex-autostart --autostart --environment i3

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
#exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork
# Picom interferes with i3lock due to the way it handles lockscreen, so
# we need to kill it before and relaunch it after i3lock
# see https://github.com/i3/i3lock/issues/333#issuecomment-1329881590
# This is handled by a custom script in ~/.local/bin/
exec --no-startup-id xss-lock --transfer-sleep-lock -- ~/.local/bin/lock.sh

# Menu for shutdown, reboot, and lock screen
# from https://wiki.archlinux.org/title/I3#Shutdown.2C_reboot.2C_lock_screen
set $Locker i3lock && sleep 1

set $mode_system System (l) lock, (e) logout, (s) suspend, (h) hibernate, (r) reboot, (Shift+s) shutdown
mode "$mode_system" {
    bindsym l exec --no-startup-id $Locker, mode "default"
    bindsym e exec --no-startup-id i3-msg exit, mode "default"
    bindsym s exec --no-startup-id $Locker && systemctl suspend, mode "default"
    bindsym h exec --no-startup-id $Locker && systemctl hibernate, mode "default"
    bindsym r exec --no-startup-id systemctl reboot, mode "default"
    bindsym Shift+s exec --no-startup-id systemctl poweroff -i, mode "default"

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+Home mode "$mode_system"


# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Use pactl to adjust volume in PulseAudio.
#set $refresh_i3status killall -SIGUSR1 i3status
#bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
#bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
#bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
#bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status
# Screen brightness hotkeys (requires brightnessctl)
#bindsym XF86MonBrightnessUp exec brightnessctl set +2%
#bindsym XF86MonBrightnessDown exec brightnessctl set 2%-

# Same as the two above, but a bit more elaborate, using a script from 
# https://gitlab.com/Nmoleo/i3-volume-brightness-indicator
bindsym XF86AudioRaiseVolume exec --no-startup-id ~/.local/src/i3-volume-brightness-indicator/volume_brightness.sh volume_up
bindsym XF86AudioLowerVolume exec --no-startup-id ~/.local/src/i3-volume-brightness-indicator/volume_brightness.sh volume_down
bindsym XF86AudioMute exec --no-startup-id ~/.local/src/i3-volume-brightness-indicator/volume_brightness.sh  volume_mute
bindsym XF86MonBrightnessUp exec --no-startup-id ~/.local/src/i3-volume-brightness-indicator/volume_brightness.sh brightness_up
bindsym XF86MonBrightnessDown exec --no-startup-id ~/.local/src/i3-volume-brightness-indicator/volume_brightness.sh brightness_down
bindsym XF86AudioPlayPause exec --no-startup-id ~/.local/src/i3-volume-brightness-indicator/volume_brightness.sh play_pause
bindsym XF86AudioPause exec --no-startup-id ~/.local/src/i3-volume-brightness-indicator/volume_brightness.sh play_pause
bindsym XF86AudioPlay exec --no-startup-id ~/.local/src/i3-volume-brightness-indicator/volume_brightness.sh play_pause
bindsym XF86AudioNext exec --no-startup-id ~/.local/src/i3-volume-brightness-indicator/volume_brightness.sh next_track
bindsym XF86AudioPrev exec --no-startup-id ~/.local/src/i3-volume-brightness-indicator/volume_brightness.sh prev_track

# Launch xfce power manager widget (and daemonise)
exec --no-startup-id xfce4-power-manager --daemon

# Use picom as a compositor
exec --no-startup-id picom -b 

# Set dark mode on GTK apps (there has to be a better solution than this one)
#exec gsettings set org.gnome.desktop.interface gtk-theme "Adwaita-dark"   # for GTK3 apps
#exec gsettings set org.gnome.desktop.interface color-scheme "prefer-dark"   # for GTK4 apps

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec i3-sensible-terminal
# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
#bindsym $mod+d exec --no-startup-id "dmenu_run -i -nf '#BBBBBB' -nb '#222222' -sb '#005577' -sf '#EEEEEE' -fn 'monospace-10'"
# A more modern dmenu replacement is rofi:
#bindcode $mod+40 exec "rofi -modi drun,run -show drun"
# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
bindcode $mod+40 exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"
## Original colour scheme
## class                 border  bground text    indicator child_border
#client.focused          #83CAFA #51A2DA #FFFFFF #83CAFA   #51A2DA
#client.focused_inactive #8C8C8C #4C4C4C #FFFFFF #4C4C4C   #8C8C8C
#client.unfocused        #4C4C4C #222222 #888888 #292D2E   #222222
#client.urgent           #EC69A0 #DB3279 #FFFFFF #DB3279   #DB3279
#client.placeholder      #000000 #0C0C0C #FFFFFF #000000   #0C0C0C
#
#client.background       #FFFFFF
#
## Start i3bar to display a workspace bar (plus the system information i3status
## finds out, if available)
#bar {
#  colors {
#    background #000000
#    statusline #FFFFFF
#    separator  #666666
#
#    focused_workspace  #83CAFA #51A2DA #FFFFFF
#    active_workspace   #3C6EB4 #294172 #FFFFFF
#    inactive_workspace #8C8C8C #4C4C4C #888888
#    urgent_workspace   #EC69A0 #DB3279 #FFFFFF
#    binding_mode       #b691d3 #A07CBC #FFFFFF
#  }
#  status_command i3status
#}

# Custom colour scheme
# class                 border  bground text    indicator child_border
client.focused          #4C7899 #285577 #FFFFFF #2E9EF4   #285577
client.focused_inactive #333333 #5F676A #FFFFFF #484E50   #5F676A
client.unfocused        #333333 #222222 #888888 #292D2E   #222222
client.urgent           #2F343A #900000 #FFFFFF #900000   #900000
client.placeholder      #000000 #0C0C0C #FFFFFF #000000   #0C0C0C

client.background       #FFFFFF

bar {
  colors {
    background #000000
    statusline #FFFFFF
    separator  #666666

    focused_workspace  #4C7899 #285577 #FFFFFF
    active_workspace   #333333 #222222 #FFFFFF
    inactive_workspace #333333 #222222 #888888
    urgent_workspace   #2F343A #900000 #FFFFFF
    binding_mode       #2F343A #900000 #FFFFFF
  }
  status_command i3status
}

##########
## GAPS ##
##########

# Space between adjacent windows or split containers
gaps inner 7px

# Space along the screen edges
# one size fit all setting
gaps outer 0px 
# Otherwise just specify the spacing individually
# (or using horizontal/vertical)
# gaps top 5px
# gaps left 5px
# gaps bottom 5px
# gaps right 5px

# Gaps when only one window/split container on the workspace
smart_gaps on

##########
## Misc ##
##########

# Assign workspaces to specific screens
# Workspace 1 should always be on primary monitor

workspace 1 output primary DP-2-1-8

# Custom shortcuts and hotkeys

# Move workspace to specific window
#bindsym $mod+Shift+j move workspace to output left
#bindsym $mod+Shift+k move workspace to output down
#bindsym $mod+Shift+l move workspace to output up
#bindsym $mod+Shift+semicolon move workspace to output right

# Popup when battery is low (requires i3-battery-popup)
exec --no-startup-id i3-battery-popup -L 30% -I 5% -t 1m -n

# Set wallpaper (requires feh)
exec --no-startup-id feh --bg-fill ~/Pictures/knvise3sljax.png

#exec --no-startup-id conky -c ~/.config/conky/desktop_guru/conky.conf

# Screenshots shortcuts (requires xclip and maim)
# From https://gist.github.com/dianjuar/ee774561a8bc02b077989bc17424a19f

# Regular screenshots
bindsym Print exec --no-startup-id maim "/$HOME/Pictures/screenshot_$(date +'%Y-%m-%d_%H:%M:%S').png"
bindsym $mod+Print exec --no-startup-id maim --window $(xdotool getactivewindow) "/$HOME/Pictures/screenshot_$(date +'%Y-%m-%d_%H:%M:%S').png"
bindsym Shift+Print exec --no-startup-id maim --select "/$HOME/Pictures/screenshot_$(date +'%Y-%m-%d_%H:%M:%S').png"

## Clipboard Screenshots
bindsym Ctrl+Print exec --no-startup-id maim | xclip -selection clipboard -t image/png
bindsym Ctrl+$mod+Print exec --no-startup-id maim --window $(xdotool getactivewindow) | xclip -selection clipboard -t image/png
bindsym Ctrl+Shift+Print exec --no-startup-id maim --select | xclip -selection clipboard -t image/png

# Move window to left/right monitor
bindsym $mod+m move workspace to output left
bindsym $mod+comma move workspace to output right

# Toggle laptop integrated display on/off 
# from https://unix.stackexchange.com/questions/315726/how-to-create-xrandr-output-toggle-script
bindsym $mod+backslash exec --no-startup-id xrandr --listactivemonitors | grep eDP-1 >/dev/null && xrandr --output eDP-1 --off || xrandr --output eDP-1 --mode 1920x1080

# Redshift toggle with Ctrl+Mod+r
#exec --no-startup-id "redshift -P -O 2500" # Just so startup with my preffered values
# Startup with smart colour temperature first (just to try it for a bit)
exec --no-startup-id "redshift -P -t 5000:4000" 
bindsym $mod+ctrl+r mode "$mode_redshift"
set $mode_redshift Set colour temperature: (a)uto, (r)eset, (2)500K, (3)000K, (4)000K, (5)000K
set $kill_redshift pkill -9 redshift;
mode "$mode_redshift" {
bindsym a exec --no-startup-id "$kill_redshift redshift -P -t 5000:4000", mode "default"
bindsym r exec --no-startup-id "$kill_redshift redshift -x", mode "default"
bindsym 2 exec --no-startup-id "$kill_redshift redshift -P -O 2500", mode "default"
bindsym 3 exec --no-startup-id "$kill_redshift redshift -P -O 3000", mode "default"
bindsym 4 exec --no-startup-id "$kill_redshift redshift -P -O 4000", mode "default"
bindsym 5 exec --no-startup-id "$kill_redshift redshift -P -O 5000", mode "default" 
bindsym Return mode "default"
bindsym Escape mode "default"
}
